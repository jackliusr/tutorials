// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"fmt"
)

// Injectors from wire.go:

func InitializeListener() Listener {
	helloSpeaker := NewHelloSpeaker()
	simpleListener := NewSimpleListener(helloSpeaker)
	return simpleListener
}

// wire.go:

type Speaker interface {
	Say()
}

type HelloSpeaker struct {
	word string
}

func NewHelloSpeaker() *HelloSpeaker {
	return &HelloSpeaker{
		word: "Hello, World!!",
	}
}

func (s *HelloSpeaker) Say() {
	fmt.Printf("%s\n", s.word)
}

type Listener interface {
	WhatIListened()
}

type SimpleListener struct {
	speaker *Speaker
}

func NewSimpleListener(speaker Speaker) *SimpleListener {
	return &SimpleListener{
		speaker: &speaker,
	}
}

func (l *SimpleListener) WhatIListened() {
	(*l.speaker).Say()
}
